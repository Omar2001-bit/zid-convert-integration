{"version":3,"file":"index.js","sources":["../../../../node_modules/murmurhash/murmurhash.js"],"sourcesContent":["(function(){\n  const _global = this;\n\n  const createBuffer = (val) => new TextEncoder().encode(val)\n\n  /**\n   * JS Implementation of MurmurHash2\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {Uint8Array | string} str ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV2(str, seed) {\n    if (typeof str === 'string') str = createBuffer(str);\n    let\n      l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n    while (l >= 4) {\n      k =\n        ((str[i] & 0xff)) |\n        ((str[++i] & 0xff) << 8) |\n        ((str[++i] & 0xff) << 16) |\n        ((str[++i] & 0xff) << 24);\n\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n      k ^= k >>> 24;\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n    case 3: h ^= (str[i + 2] & 0xff) << 16;\n    case 2: h ^= (str[i + 1] & 0xff) << 8;\n    case 1: h ^= (str[i] & 0xff);\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    }\n\n    h ^= h >>> 13;\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    h ^= h >>> 15;\n\n    return h >>> 0;\n  };\n\n  /*\n   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {Uint8Array | string} key ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV3(key, seed) {\n    if (typeof key === 'string') key = createBuffer(key);\n\n    let remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n          ((key[i] & 0xff)) |\n          ((key[++i] & 0xff) << 8) |\n          ((key[++i] & 0xff) << 16) |\n          ((key[++i] & 0xff) << 24);\n      ++i;\n\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n      h1 ^= k1;\n          h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3: k1 ^= (key[i + 2] & 0xff) << 16;\n      case 2: k1 ^= (key[i + 1] & 0xff) << 8;\n      case 1: k1 ^= (key[i] & 0xff);\n\n      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n  }\n\n  const murmur = MurmurHashV3;\n  murmur.v2 = MurmurHashV2;\n  murmur.v3 = MurmurHashV3;\n\n  if (typeof(module) != 'undefined') {\n    module.exports = murmur;\n  } else {\n    const _previousRoot = _global.murmur;\n    murmur.noConflict = function() {\n      _global.murmur = _previousRoot;\n      return murmur;\n    }\n    _global.murmur = murmur;\n  }\n}());\n"],"names":["createBuffer","val","TextEncoder","encode","MurmurHashV2","str","seed","l","length","h","i","k","MurmurHashV3","key","remainder","bytes","h1","h1b","c1","c1b","c2","k1","murmur","v2","v3","module","exports"],"mappings":"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GAAiBJ,MAAM,CAAA;AAC3B,KAOG;AACH,GAAC,GAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}